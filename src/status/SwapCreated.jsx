import log from "loglevel";
import { Show, onMount } from "solid-js";

import QrCode from "../components/QrCode";
import { BTC } from "../consts";
import { clipboard, cropString } from "../helper";
import t from "../i18n";
import { denomination, swap, webln } from "../signals";
import { denominations, formatAmount } from "../utils/denomination";
import { enableWebln } from "../utils/webln";

const SwapCreated = () => {
    const payWeblnInvoice = async (pr) => {
        enableWebln(async () => {
            const result = await window.webln.sendPayment(pr);
            log.debug("webln payment result:", result);
        });
    };

    onMount(() => {
        if (window.Invoice) {
            Invoice.postMessage(swap().invoice);
        }
    })

    return (
        <div>
            <hr />
            <QrCode data={swap().reverse ? swap().invoice : swap().bip21} />
            <hr />
            <p
                onclick={() => clipboard(swap().invoice, t("copied"))}
                class="address-box break-word">
                <small>{swap().invoice}</small>
&nbsp;

	        <svg width="13" height="14" viewBox="0 0 13 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<mask id="path-1-outside-1_4256_63265" maskUnits="userSpaceOnUse" x="-0.5" y="0" width="14" height="14" fill="black">
<rect fill="white" x="-0.5" width="14" height="14"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M5.09992 1H12.0998C12.2059 1 12.3077 1.04214 12.3827 1.11714C12.4577 1.19214 12.4998 1.29392 12.4998 1.39999V8.39988C12.4998 8.54282 12.4235 8.67487 12.2998 8.7463C12.1761 8.81772 12.0236 8.81772 11.8998 8.7463C11.7761 8.67487 11.6998 8.54282 11.6998 8.39988V1.79999H5.09992C4.95698 1.79999 4.82493 1.72374 4.7535 1.59999C4.68207 1.47624 4.68207 1.32375 4.7535 1.2C4.82493 1.07625 4.95697 1 5.09992 1ZM0.899994 2.60017H10.4998C10.6059 2.60017 10.7077 2.64231 10.7827 2.71731C10.8577 2.79231 10.8998 2.89409 10.8998 3.00016V12.6C10.8998 12.7061 10.8577 12.8079 10.7827 12.8829C10.7077 12.9579 10.6059 13 10.4998 13H0.899994C0.793924 13 0.692139 12.9579 0.617141 12.8829C0.542143 12.8079 0.5 12.7061 0.5 12.6V3.00016C0.5 2.89409 0.542143 2.79231 0.617141 2.71731C0.692139 2.64231 0.793924 2.60017 0.899994 2.60017ZM1.29999 12.2H10.0998V3.40016H1.29999V12.2Z"/>
</mask>
<path fill-rule="evenodd" clip-rule="evenodd" d="M5.09992 1H12.0998C12.2059 1 12.3077 1.04214 12.3827 1.11714C12.4577 1.19214 12.4998 1.29392 12.4998 1.39999V8.39988C12.4998 8.54282 12.4235 8.67487 12.2998 8.7463C12.1761 8.81772 12.0236 8.81772 11.8998 8.7463C11.7761 8.67487 11.6998 8.54282 11.6998 8.39988V1.79999H5.09992C4.95698 1.79999 4.82493 1.72374 4.7535 1.59999C4.68207 1.47624 4.68207 1.32375 4.7535 1.2C4.82493 1.07625 4.95697 1 5.09992 1ZM0.899994 2.60017H10.4998C10.6059 2.60017 10.7077 2.64231 10.7827 2.71731C10.8577 2.79231 10.8998 2.89409 10.8998 3.00016V12.6C10.8998 12.7061 10.8577 12.8079 10.7827 12.8829C10.7077 12.9579 10.6059 13 10.4998 13H0.899994C0.793924 13 0.692139 12.9579 0.617141 12.8829C0.542143 12.8079 0.5 12.7061 0.5 12.6V3.00016C0.5 2.89409 0.542143 2.79231 0.617141 2.71731C0.692139 2.64231 0.793924 2.60017 0.899994 2.60017ZM1.29999 12.2H10.0998V3.40016H1.29999V12.2Z" fill="#191919"/>
<path d="M12.3827 1.11714L12.5241 0.97572L12.5241 0.975719L12.3827 1.11714ZM11.8998 8.7463L11.7998 8.91951H11.7998L11.8998 8.7463ZM11.6998 1.79999H11.8998V1.59999H11.6998V1.79999ZM4.7535 1.59999L4.92672 1.50001L4.92672 1.50001L4.7535 1.59999ZM4.7535 1.2L4.92672 1.29998L4.92672 1.29998L4.7535 1.2ZM10.7827 2.71731L10.6413 2.85873V2.85873L10.7827 2.71731ZM10.7827 12.8829L10.9241 13.0243L10.9241 13.0243L10.7827 12.8829ZM0.617141 12.8829L0.475719 13.0243L0.47572 13.0243L0.617141 12.8829ZM0.617141 2.71731L0.758562 2.85873L0.758562 2.85873L0.617141 2.71731ZM10.0998 12.2V12.4H10.2998V12.2H10.0998ZM1.29999 12.2H1.09999V12.4H1.29999V12.2ZM10.0998 3.40016H10.2998V3.20016H10.0998V3.40016ZM1.29999 3.40016V3.20016H1.09999V3.40016H1.29999ZM12.0998 0.8H5.09992V1.2H12.0998V0.8ZM12.5241 0.975719C12.4116 0.863197 12.2589 0.8 12.0998 0.8V1.2C12.1529 1.2 12.2038 1.22109 12.2412 1.25856L12.5241 0.975719ZM12.6998 1.39999C12.6998 1.2409 12.6366 1.08824 12.5241 0.97572L12.2412 1.25856C12.2787 1.29604 12.2998 1.34694 12.2998 1.39999H12.6998ZM12.6998 8.39988V1.39999H12.2998V8.39988H12.6998ZM12.3998 8.91951C12.5854 8.81235 12.6998 8.61427 12.6998 8.39988H12.2998C12.2998 8.47137 12.2617 8.53739 12.1998 8.57308L12.3998 8.91951ZM11.7998 8.91951C11.9854 9.02665 12.2142 9.02665 12.3998 8.91951L12.1998 8.57308C12.1379 8.6088 12.0617 8.6088 11.9998 8.57308L11.7998 8.91951ZM11.4998 8.39988C11.4998 8.61427 11.6142 8.81235 11.7998 8.91951L11.9998 8.57308C11.9379 8.53739 11.8998 8.47138 11.8998 8.39988H11.4998ZM11.4998 1.79999V8.39988H11.8998V1.79999H11.4998ZM5.09992 1.99999H11.6998V1.59999H5.09992V1.99999ZM4.58029 1.69997C4.68744 1.88562 4.88553 1.99999 5.09992 1.99999V1.59999C5.02842 1.59999 4.96241 1.56185 4.92672 1.50001L4.58029 1.69997ZM4.58028 1.10002C4.47315 1.28563 4.47314 1.51435 4.58029 1.69997L4.92672 1.50001C4.891 1.43813 4.891 1.36186 4.92672 1.29998L4.58028 1.10002ZM5.09992 0.8C4.88553 0.8 4.68744 0.914363 4.58028 1.10002L4.92672 1.29998C4.96241 1.23813 5.02842 1.2 5.09992 1.2V0.8ZM10.4998 2.40017H0.899994V2.80017H10.4998V2.40017ZM10.9241 2.57589C10.8116 2.46337 10.6589 2.40017 10.4998 2.40017V2.80017C10.5529 2.80017 10.6038 2.82126 10.6413 2.85873L10.9241 2.57589ZM11.0998 3.00016C11.0998 2.84107 11.0366 2.68841 10.9241 2.57589L10.6413 2.85873C10.6787 2.8962 10.6998 2.94711 10.6998 3.00016H11.0998ZM11.0998 12.6V3.00016H10.6998V12.6H11.0998ZM10.9241 13.0243C11.0366 12.9118 11.0998 12.7591 11.0998 12.6H10.6998C10.6998 12.6531 10.6787 12.704 10.6413 12.7414L10.9241 13.0243ZM10.4998 13.2C10.6589 13.2 10.8116 13.1368 10.9241 13.0243L10.6413 12.7414C10.6038 12.7789 10.5529 12.8 10.4998 12.8V13.2ZM0.899994 13.2H10.4998V12.8H0.899994V13.2ZM0.47572 13.0243C0.588242 13.1368 0.740905 13.2 0.899994 13.2V12.8C0.846944 12.8 0.796035 12.7789 0.758562 12.7414L0.47572 13.0243ZM0.3 12.6C0.3 12.7591 0.363197 12.9118 0.475719 13.0243L0.758563 12.7414C0.721089 12.704 0.7 12.6531 0.7 12.6H0.3ZM0.3 3.00016V12.6H0.7V3.00016H0.3ZM0.47572 2.57589C0.363197 2.68841 0.3 2.84107 0.3 3.00016H0.7C0.7 2.94711 0.721089 2.8962 0.758562 2.85873L0.47572 2.57589ZM0.899994 2.40017C0.740905 2.40017 0.588242 2.46337 0.47572 2.57589L0.758562 2.85873C0.796035 2.82126 0.846943 2.80017 0.899994 2.80017V2.40017ZM10.0998 12H1.29999V12.4H10.0998V12ZM9.89985 3.40016V12.2H10.2998V3.40016H9.89985ZM1.29999 3.60016H10.0998V3.20016H1.29999V3.60016ZM1.49999 12.2V3.40016H1.09999V12.2H1.49999Z" fill="#191919" mask="url(#path-1-outside-1_4256_63265)"/>
</svg>

            </p>
            <hr />
            <span><bold>{t("warning_return")}</bold></span>
            <hr />
            <Show when={webln()}>
                <span
                    class="btn btn-light"
                    onClick={() => payWeblnInvoice(swap().invoice)}>
                    {t("pay_invoice_webln")}
                </span>
            </Show>
        </div>
    );
};

export default SwapCreated;
